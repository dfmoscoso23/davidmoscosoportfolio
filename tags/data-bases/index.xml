<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data bases on David Moscoso</title>
    <link>https://dfmoscoso23.github.io/davidmoscosoportfolio/tags/data-bases/</link>
    <description>Recent content in Data bases on David Moscoso</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://dfmoscoso23.github.io/davidmoscosoportfolio/tags/data-bases/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ecuadorian Linguistic Corpus</title>
      <link>https://dfmoscoso23.github.io/davidmoscosoportfolio/projects/creations/corpus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dfmoscoso23.github.io/davidmoscosoportfolio/projects/creations/corpus/</guid>
      <description>GitHub Repository
Backend structure To create a structure for a corpus, first is necessarily think in databases. Considering that a corpus is going to manage thousands of words, lemmas, forms and documents it needs a big DDBB manager, I choose Postgres for that. Also, I choose Django because you can manage a big web page with modular parts. That means it can be growing with no conflicts of the other modules.</description>
    </item>
    
    <item>
      <title>Rebuilding a book&#39;s Catalog of a Publisher</title>
      <link>https://dfmoscoso23.github.io/davidmoscosoportfolio/projects/creations/catalogolosada/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dfmoscoso23.github.io/davidmoscosoportfolio/projects/creations/catalogolosada/</guid>
      <description>GitHub Repository
Content of a Book&amp;rsquo;s Catalog of a Publisher A publisher&amp;rsquo;s Catalog has all the data and metadata related to his books. For example:
 ISBN Title Author Dimensions Pages Summary Translator Illustrator Type of Cover Image Url  This publisher has all this information in his web page, but it was uploaded manually and he has not a unic file with the information.
Scrapping of the Data To collect the data I iterate a list of ISBN (International Serial Book Number) to find the exact page in the web page.</description>
    </item>
    
  </channel>
</rss>
